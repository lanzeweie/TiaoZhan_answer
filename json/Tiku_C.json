{
    "name": "桥帮主读书日C题库",
    "date": "2022/5/6",
    "jieshao": "title 为题目 date 为题目选项 空格为分格 answer为答案",
    "Tiku": [
        {
            "title": "word可以为奇偶页设置不同的页眉",
            "date": "错误 正确  ",
            "answer": "正确"
        },
        {
            "title": "在长度为n的有序链表中进行查找，最坏情况下需要比较的次数为（ ）",
            "date": "n/2 n1 n 与有序顺序表的对分查找相同",
            "answer": "n"
        },
        {
            "title": "C语言程序的模块化通过以下哪个选项来实现（ ）",
            "date": "变量 函数 语句 程序行",
            "answer": "函数"
        },
        {
            "title": "为了避免在嵌套的if-else语句中产生二义性，C语言规定与else子句配对是（ ）",
            "date": "与其在同一行上的if子句 与其缩排位置相同的if子句 在其之后最近的不带else的if子句 在其之前最近的不带else的同层if子句",
            "answer": "在其之前最近的不带else的同层if子句"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "对于逻辑表达式：a++ b++，设a的值为0，则求解表达式的值后，b的值会发生改变 对于逻辑表达式：a++ b++，设a的值为1，则求解表达式的值后，b的值会发生改变 else不是一条独立的语句，它只是if语句的一部分 关系运算符的结果有三种：0，1，1",
            "answer": "else不是一条独立的语句，它只是if语句的一部分"
        },
        {
            "title": "有如下程序段 for (i=0; i＜10; i++) if (i ＜= 5) break;则循环结束后i的值为( )",
            "date": "5 0 10 1",
            "answer": "0"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "只能在函数体内定义变量，其他地方不允许定义变量 整型常量和实型常量都是数值型常量 常量的类型不能从字面形式上区分，需要根据类型名来决定 预定义的标识符是C语言关键字的一种，不能另作它用",
            "answer": "整型常量和实型常量都是数值型常量"
        },
        {
            "title": "C语言主要是借助以下哪种手段来实现程序模块化（ ）",
            "date": "使用三种基本结构语句 定义常量和外部变量 使用丰富的数据类型 定义函数",
            "answer": "定义函数"
        },
        {
            "title": "设有定义语句：int (*f)(int); 则以下叙述正确的是（ ）",
            "date": "f是指向函数的指针变量，该函数具有一个int类型的形参 f是函数名，该函数的返回值是基类型为int类型的地址 f是指向int类型一维数组的指针变量 f是基类型为int的指针变量",
            "answer": "f是指向函数的指针变量，该函数具有一个int类型的形参"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "可以对字符串进行关系运算 空字符串不占用内存，其内存空间大小是0 两个连续的单引号（）是合法的字符常量 两个连续的双引号（\"\"）是合法的字符串常量",
            "answer": "两个连续的双引号（\"\"）是合法的字符串常量"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "标识符总是由字母、数字和下划线组成，且第一个字符不得为数字 用户自定义的标识符必须\"见名知义\"，如果随意定义，则会出编译错误 标识符的长度不能任意长，最多只能包含16个字符 语言中的关键字不能作变量名，但可以作为函数名",
            "answer": "标识符总是由字母、数字和下划线组成，且第一个字符不得为数字"
        },
        {
            "title": "若变量已正确定义，则以下语句的输出结果是（ ）s=32;s^=32;printf(\"%d\",s);",
            "date": "1 32 1 0",
            "answer": "0"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "若有int a=4,b=9; 执行了a=b;b=a;之后，a的值为9，b的值为4 若有int a=4,b=9; 执行了a=b后，a的值已由原值改变为b的值，b的值变为0 a是实型变量，a=10在C语言中是允许的，因此可以说：实型变量中可以存放整型数 若有int a=4,b=9; 执行了a=b;b=a;之后，a的值为9，b的值为9",
            "answer": "若有int a=4,b=9; 执行了a=b;b=a;之后，a的值为9，b的值为9"
        },
        {
            "title": "设栈与队列初始状态为空。将元素A,B,C,D,E,F,G,H依次轮流入栈和入队，然后依次轮流出栈和退队，则输出序列为（  ）。",
            "date": "A,B,C,D,H,G,F,E D,C,B,A,E,F,G,H G,B,E,D,C,F,A,H B,G,D,E,F,C,H,A",
            "answer": "G,B,E,D,C,F,A,H"
        },
        {
            "title": "关于C语言的符号常量，以下叙述中正确的是（ ）",
            "date": "符号常量是指在程序中通过宏定义用一个符号名来代表一个常量 符号常量在整个程序中其值都不能再被重新定义 符号常量的符号名是标识符，但必须大写 符号常量的符号名必须是常量",
            "answer": "符号常量是指在程序中通过宏定义用一个符号名来代表一个常量"
        },
        {
            "title": "以下叙述中错误的是（  ）",
            "date": "可以用typedef将已存在的类型用一个新的名字来代表 用typedef可以为各种类型起别名，但不能为变量起别名 用typedef定义新的类型名后，原有类型名仍有效 可以通过typedef增加新的类型",
            "answer": "可以通过typedef增加新的类型"
        },
        {
            "title": "下面对“对象”概念描述错误的是（ ）",
            "date": "对象间的通信是靠消息传递 对象不具有封装性 一个对象是其对应类的实例 对象是属性和方法的封装体",
            "answer": "对象不具有封装性"
        },
        {
            "title": "循环队列的存储空间为Q(1:50),初始状态为空。经过一系列正常的入队与退队操作后，front=24,rear=25。此时该循环队列中的元素个数为（ ）",
            "date": "49 50 1 25",
            "answer": "1"
        },
        {
            "title": "下面关于\"EOF\"的叙述，正确的是（ ）",
            "date": "文本文件和二进制文件都可以用EOF作为文件结束标志 EOF是在库函数文件中定义的符号常量 EOF的值等于0 对于文本文件，fgetc函数读入最后一个字符时，返回值是EOF",
            "answer": "EOF是在库函数文件中定义的符号常量"
        },
        {
            "title": "设表的长度为n。下列查找算法中，在最坏情况下，比较次数最少的是（ ）",
            "date": "寻找最小项 有序表的二分查找 寻找最大项 顺序查找",
            "answer": "有序表的二分查找"
        },
        {
            "title": "C语言中double 类型数据占字节数为（ ）",
            "date": "4 16 8 12",
            "answer": "8"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "函数体中的语句不能出现对自己的调用 函数名代表该函数的入口地址 如果函数带有参数，就不能调用自己 所有函数均不能接受函数名作为实参传入",
            "answer": "函数名代表该函数的入口地址"
        },
        {
            "title": "以下叙述中错误的是(  )。",
            "date": "可以用typedef将已存在的类型用一个新的名字来代表 可以通过typedef增加新的类型 用typedef可以为各种类型起别名，但不能为变量起别名 用typedef定义新的类型名后，原有类型名仍有效",
            "answer": "可以通过typedef增加新的类型"
        },
        {
            "title": "以下针对全局变量的叙述错误的是（ ）",
            "date": "全局变量的生存期贯穿于整个程序的运行期间 用extern说明符可以限制全局变量的作用域 全局变量是在函数外部任意位置上定义的变量 全局变量的作用域是从定义位置开始至源文件结束",
            "answer": "用extern说明符可以限制全局变量的作用域"
        },
        {
            "title": "属于软件概要设计阶段任务的是（ ）",
            "date": "模块的实现算法设计 概要设计文档评审 模块实现算法的局部数据结构设计 数据库物理设计",
            "answer": "概要设计文档评审"
        },
        {
            "title": "若在程序中变量均已定义成int类型，且已赋大于1的值，则下列选项中能正确表示代数式的表达式是（ ）",
            "date": "1.0/a/b/c 1/(abc) 1.0/abc 1/a/b/(double)c",
            "answer": "1.0/a/b/c"
        },
        {
            "title": "简单程序设计步骤中不包括（ ）",
            "date": "编码 调试 确定算法 安装编译程序",
            "answer": "安装编译程序"
        },
        {
            "title": "以下关于字符串的叙述中正确的是（ ）",
            "date": "C语言中有字符串类型的常量和变量 空串比空格打头的字符串小 两个字符串中的字符个数相同时才能进行字符串大小的比较 可以用关系运算符对字符串的大小进行比较",
            "answer": "空串比空格打头的字符串小"
        },
        {
            "title": "将C语言的十进制整数设为整数类i，则下面属于类i的实例的是（ ）",
            "date": "0256 256E2 256 0.256",
            "answer": "256"
        },
        {
            "title": "在数据库的数据模型中，面向数据库管理系统且着重于数据在数据库系统一级实现的是（ ）",
            "date": "概念模型 物理模型 逻辑模型 面向对象的模型",
            "answer": "逻辑模型"
        },
        {
            "title": "软件按功能可以分为：应用软件、系统软件和工具（支撑）软件，下面属于工具（支撑）软件的是（ ）",
            "date": "编辑软件Word Windows操作系统 财务管理系统 数据库管理系统",
            "answer": "编辑软件Word"
        },
        {
            "title": "以下叙述正确的是（ ）",
            "date": "C语言程序是由过程和函数组成的 C语言中除了main函数，其他函数不可作为单独文件形式存在 C语言函数不可以单独编译 C语言函数可以嵌套调用，例如：fun(fun(x))",
            "answer": "C语言函数可以嵌套调用，例如：fun(fun(x))"
        },
        {
            "title": "设有如下函数定义：#include ＜stdio.h＞int fun(int k){ if(k＜1) return 0； else if(k＝＝1) return 1； else return fun(k－1)＋1；}若执行调用语句：n＝fun(3)；，则函数fun总共被调用的次数是（ ）",
            "date": "3 4 2 5",
            "answer": "3"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "循环队列是队列的一种顺序存储结构 循环队列中的队尾指针一定小于队头指针 循环队列是队列的一种链式存储结构 循环队列中的队尾指针一定大于队头指针",
            "answer": "循环队列是队列的一种顺序存储结构"
        },
        {
            "title": "若有定义语句：double a，*p＝&a；以下叙述中错误的是（ ）",
            "date": "定义语句中的号是一个间址运算符 定义语句中的p只能存放double类型变量的地址 定义语句中的号是一个说明符 定义语句中，p＝a把变量a的地址作为初值赋给指针变量p",
            "answer": "定义语句中的号是一个间址运算符"
        },
        {
            "title": "以下关于return语句的叙述中正确的是（ ）",
            "date": "一个自定义函数中可以根据不同情况设置多条return语句 没有return语句的自定义函数在执行结束时不能返回到调用处 一个自定义函数中必须有一条return语句 定义成void类型的函数中可以有带返回值的return语句",
            "answer": "一个自定义函数中可以根据不同情况设置多条return语句"
        },
        {
            "title": "下列排序法中，每经过一次元素的交换会产生新的逆序的是（ ）",
            "date": "简单选择排序 简单插入排序 冒泡排序 快速排序",
            "answer": "快速排序"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "continue语句使得整个循环终止 使用break语句可以使流程跳出switch语句体 在for语句中，continue与break的效果是一样的，可以互换 break语句不能用于提前结束for语句的本层循环",
            "answer": "使用break语句可以使流程跳出switch语句体"
        },
        {
            "title": "若函数调用时的实参为变量时，以下关于函数形参和实参的叙述中正确的是（ ）",
            "date": "同名的实参和形参占同一存储单元 函数的形参和实参分别占用不同的存储单元 形参只是形式上的存在，不占用具体存储单元 函数的实参和其对应的形参共占同一存储单元",
            "answer": "函数的形参和实参分别占用不同的存储单元"
        },
        {
            "title": "在数据库系统中，数据模型包括概念模型、逻辑模型和（ ）",
            "date": "物理模型 空间模型 时间模型 对象模型",
            "answer": "物理模型"
        },
        {
            "title": "软件需求规格说明的内容不包括（ ）",
            "date": "软件的主要功能 软件的性能 算法详细设计 运行环境",
            "answer": "算法详细设计"
        },
        {
            "title": "在关系数据库设计中，关系模式是用来记录用户数据的（  ）。",
            "date": "属性 视图 实体 二维表",
            "answer": "二维表"
        },
        {
            "title": "有如下程序段 int *p, a=1; p=&a; *p=10;则变量a的值为（ ）",
            "date": "不能确定 10 1 11",
            "answer": "10"
        },
        {
            "title": "设顺序表的长度为n。下列排序方法中，最坏情况下比较次数小于n(n-1)/2的是（ ）",
            "date": "冒泡排序 快速排序 简单插入排序 堆排序",
            "answer": "堆排序"
        },
        {
            "title": "下面描述不属于软件特点的是（ ）",
            "date": "软件使用不涉及知识产权 软件复杂性高 软件是一种逻辑实体，具有抽象性 软件在使用中不存在磨损、老化问题",
            "answer": "软件使用不涉及知识产权"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "C程序中所有函数之间都可以相互调用 在C程序中main函数的位置是固定的 每个C程序文件中都必须要有一个main函数 在C程序的函数中不能定义另一个函数",
            "answer": "在C程序的函数中不能定义另一个函数"
        },
        {
            "title": "设变量m为float类型，变量n为int类型，则以下能实现将m中的数值保留小数点后两位，第三位进行四舍五入运算的表达式是（ ）",
            "date": "n=m100+0.5, m=n/100.0 n=m/100+0.5, m=n100.0 m=(m100+0.5)/100.0 m=m100+0.5/100.0",
            "answer": "n=m100+0.5, m=n/100.0"
        },
        {
            "title": "以下选项中非法的C语言字符常量是（  ）",
            "date": "39;＼00739; 39;＼b39; 39;aa39; 39;＼xaa39;",
            "answer": "39;aa39;"
        },
        {
            "title": "数据库管理系统应能实现的专门关系运算包括（ ）",
            "date": "关联、更新、排序 排序、索引、统计 选择、投影、连接 显示、打印、制表",
            "answer": "选择、投影、连接"
        },
        {
            "title": "若有定义：int a; float b; double c; ，程序运行时输入：1,2,3＜回车＞，能把1输入给变量a、2输入给变量b、3输入给变量c的输入语句是（ ）",
            "date": "scanf(\"d,f,f\", a,b,c); scanf(\"d,f,lf\", a,b,c); scanf(\"dflf\", a,b,c); scanf(\"d,lf,lf\", a,b,c);",
            "answer": "scanf(\"d,f,lf\", a,b,c);"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "如果企图通过一个空指针来访问一个存储单元，将会得到一个出错信息 设变量p是一个指针变量，则语句p=0;是非法的，应该使用p=NULL; 即使不进行强制类型转换，在进行指针赋值运算时，指针变量的基类型也可以不同 指针变量之间不能用关系运算符进行比较",
            "answer": "如果企图通过一个空指针来访问一个存储单元，将会得到一个出错信息"
        },
        {
            "title": "关于程序中的注释，以下叙述正确的是（ ）",
            "date": "注释的内容必须放在一对/ 和 /之间 注释必须置于所说明的语句前或语句后 注释内容错误会导致编译出错 注释中间可以嵌套另一个注释",
            "answer": "注释的内容必须放在一对/ 和 /之间"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "对象标识可以不唯一 对象具有封装性 对象是属性名和属性的封装体 对象间的通信是靠方法调用",
            "answer": "对象具有封装性"
        },
        {
            "title": "逻辑模型是面向数据库系统的模型，下面属于逻辑模型的是（ ）",
            "date": "物理模型 谓词模型 关系模型 实体联系模型",
            "answer": "关系模型"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "算法的空间复杂度与算法所处理的数据存储空间有关 压缩数据存储空间不会降低算法的空间复杂度 算法的空间复杂度是指算法程序控制结构的复杂程度 算法的空间复杂度是指算法程序中指令的条数",
            "answer": "算法的空间复杂度与算法所处理的数据存储空间有关"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "C语言程序所调用的函数必须放在main函数的前面 C语言程序中main函数必须放在程序的开始位置 C语言程序总是从main函数开始执行 C语言程序总是从最前面的函数开始执行",
            "answer": "C语言程序总是从main函数开始执行"
        },
        {
            "title": "若有函数声明：void fun(float array[], int *ptr);以下叙述正确的是（ ）",
            "date": "函数参数 array 不是指针变量，ptr 是指针变量 调用函数时，array是按值传送，ptr是按地址传送 调用函数时，实参数组的值将一一复制给array数组 函数参数 array, ptr 都是指针变量",
            "answer": "函数参数 array, ptr 都是指针变量"
        },
        {
            "title": "将数据库的结构划分成多个层次，是为了提高数据库的逻辑独立性和( )。",
            "date": "物理独立性 安全性 操作独立性 管理规范性",
            "answer": "物理独立性"
        },
        {
            "title": "顺序程序不具有（  ）。",
            "date": "并发性 封闭性 可再现性 顺序性",
            "answer": "并发性"
        },
        {
            "title": "设顺序表的长度为16，对该表进行简单插入排序。在最坏情况下需要的比较次数为（ ）",
            "date": "15 120 60 30",
            "answer": "120"
        },
        {
            "title": "计算机完成一条指令所花费的时间称为一个（  ）。",
            "date": "执行速度 存取周期 执行时序 指令周期",
            "answer": "指令周期"
        },
        {
            "title": "以下选项中合法的C语言赋值语句是（ ）",
            "date": "a=3,b=9 a=b=34 ++i; k=int( a+b );",
            "answer": "++i;"
        },
        {
            "title": "以下选项中合法的标识符是（ ）",
            "date": "1－1 1_1 1_ _ _11",
            "answer": "_11"
        },
        {
            "title": "以下叙述正确的是（ ）",
            "date": "循环结构、选择结构、顺序结构都是结构化程序的基本结构 只有不超过20步操作步骤的算法才是简单算法 过于复杂的算法不能使用N－S流程图描述 计算机可以直接执行C语言程序，不需要做任何转换",
            "answer": "循环结构、选择结构、顺序结构都是结构化程序的基本结构"
        },
        {
            "title": "结构化程序的三种基本控制结构是（  ）。",
            "date": "调用、返回和转移 递归、堆栈和队列 过程、子程序和函数 顺序、选择和重复",
            "answer": "顺序、选择和重复"
        },
        {
            "title": "循环队列的存储空间为Q(1:50)。经过一系列正常的入队与退队操作后，front=rear=25。后又成功地将一个元素入队，此时队列中的元素个数为（ ）",
            "date": "2 50 26 1",
            "answer": "1"
        },
        {
            "title": "以下叙述正确的是（ ）",
            "date": "main()函数若不带参数，其后面的一对圆括号可省略 C程序总是以main()作为程序执行的起始行 C语言中的语句之间必须用分号作为分隔符 函数体内的定义语句和可执行语句允许任意穿插出现",
            "answer": "C程序总是以main()作为程序执行的起始行"
        },
        {
            "title": "以下叙述正确的是（ ）",
            "date": "dowhile语句构成的循环，必须用break语句退出循环 whiledo语句构成的循环，当while语句中的表达式值为非0时结束循环 dowhile语句和whiledo构成的循环功能相同 dowhile语句构成的循环，当while语句中的表达式值为0时结束循环",
            "answer": "dowhile语句构成的循环，当while语句中的表达式值为0时结束循环"
        },
        {
            "title": "算法应当具有的特性不包括（ ）",
            "date": "美观性 有穷性 确定性 可行性",
            "answer": "美观性"
        },
        {
            "title": "下列选项中不属于结构化程序设计原则的是（ ）",
            "date": "自顶向下 可封装 模块化 逐步求精",
            "answer": "可封装"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "在调用函数时，可以将结构体变量作为实参传给函数 函数的返回值不能是结构体类型 函数的返回值不能是结构体指针类型 结构体数组不能作为参数传给函数",
            "answer": "在调用函数时，可以将结构体变量作为实参传给函数"
        },
        {
            "title": "算法的有穷性是指（ ）",
            "date": "算法只能被有限的用户使用 算法程序的长度是有限的 算法程序的运行时间是有限的 算法程序所处理的数据量是有限的",
            "answer": "算法程序的运行时间是有限的"
        },
        {
            "title": "对长度为8的数组进行快速排序，最多需要的比较次数为（ ）",
            "date": "56 8 64 28",
            "answer": "28"
        },
        {
            "title": "设有定义语句：char *aa[2]={ \"abcd\",\"ABCD\"}; 则以下叙述正确的是（ ）",
            "date": "aa[0]存放了字符串\"abcd\"的首地址 aa是指针变量，它指向含有两个元素的字符型数组 aa数组的两个元素只能存放含有4个字符的一维数组的首地址 aa数组的值分别是字符串\"abcd\"和\"ABCD\"",
            "answer": "aa[0]存放了字符串\"abcd\"的首地址"
        },
        {
            "title": "以下叙述正确的是（ ）",
            "date": "链接程序把文件后缀为.c的源程序文件链接成文件后缀为.exe的可执行文件 C编译程序把文件后缀为.c的源程序文件编译成文件后缀为.obj的二进制文件 C编译程序把文件后缀为.obj的二进制文件编译成文件后缀为.exe的可执行文件 C编译程序把文件后缀为.c的源程序文件编译成文件后缀为.exe的可执行文件",
            "answer": "C编译程序把文件后缀为.c的源程序文件编译成文件后缀为.obj的二进制文件"
        },
        {
            "title": "对于 if(表达式) 语句，以下叙述正确的是（ ）",
            "date": "在\"表达式\"中不能出现常量 \"表达式\"的值可以是任意合法的数值 在\"表达式\"中不能出现变量 \"表达式\"的值必须是逻辑值",
            "answer": "\"表达式\"的值可以是任意合法的数值"
        },
        {
            "title": "以下选项中叙述正确的是（ ）",
            "date": "复杂任务可以分解成简单子任务 C语言程序可以定义多个不同内容的main函数 C语言程序中的所有函数必须保存在同一个源文件中 全部三种基本结构都包含的才是结构化程序",
            "answer": "复杂任务可以分解成简单子任务"
        },
        {
            "title": "若有定义语句：int a[2][3],*p[3];则以下语句中正确的是（ ）",
            "date": "p[0]=a; p=a; p[0]=a[1][2]; p[1]=a;",
            "answer": "p[0]=a[1][2];"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "在算法设计时，可以把复杂任务分解成一些简单的子任务 只要包含了三种基本结构的算法就是结构化程序 结构化程序必须包含所有的三种基本结构，缺一不可 在C语言程序设计中，所有函数必须保存在一个源文件中",
            "answer": "在算法设计时，可以把复杂任务分解成一些简单的子任务"
        },
        {
            "title": "以下选项中叙述正确的是（ ）",
            "date": "C程序中的语句要经过编译才能转换成二进制机器指令 算法需要包含所有三种基本结构 简单算法的操作步骤不能超过20步 有些算法不能用三种基本结构来表达",
            "answer": "C程序中的语句要经过编译才能转换成二进制机器指令"
        },
        {
            "title": "设有定义：double x=2.12;，以下不能完整输出变量x值的语句是（ ）",
            "date": "printf(\"x=5.0fn\",x); printf(\"x=lfn\",x); printf(\"x=fn\",x); printf(\"x=0.5fn\",x);",
            "answer": "printf(\"x=5.0fn\",x);"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "算法的复杂度包括时间复杂度与空间复杂度 算法的时间复杂度是指设计算法的工作量 算法复杂度是指设计算法的难度 算法复杂度是指算法控制结构的复杂程度",
            "answer": "算法的复杂度包括时间复杂度与空间复杂度"
        },
        {
            "title": "以下选项中不属于C语言标识符的是（ ）",
            "date": "关键字 预定义标识符 用户标识符 常量",
            "answer": "常量"
        },
        {
            "title": "关于C语言的变量，以下叙述中错误的是（ ）",
            "date": "所谓变量是指在程序运行过程中其值可以被改变的量 由三条下划线构成的符号名是合法的变量名 变量所占的存储单元地址可以随时改变 程序中用到的所有变量都必须先定义后才能使用",
            "answer": "变量所占的存储单元地址可以随时改变"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "结构体数组名不能作为实参传给函数 即使是同类型的结构体变量，也不能进行整体赋值 结构体中可以含有指向本结构体的指针成员 结构体变量的地址不能作为实参传给函数",
            "answer": "结构体中可以含有指向本结构体的指针成员"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "算法的时间复杂度与空间复杂度一定相关 数据的逻辑结构与存储结构是一一对应的 算法的效率只与问题的规模有关，而与数据的存储结构无关 算法的时间复杂度是指执行算法所需要的计算工作量",
            "answer": "算法的时间复杂度是指执行算法所需要的计算工作量"
        },
        {
            "title": "计算机中的缓冲技术用于（ ）",
            "date": "提高设备利用率 提高主机和设备交换信息的速度 扩充相对地址空间 提供主、辅存接口",
            "answer": "提高主机和设备交换信息的速度"
        },
        {
            "title": "理论上计算机虚拟内存最大容量取决于（ ）",
            "date": "数据存放的实际地址 计算机地址位数 磁盘空间的大小 物理内存的大小",
            "answer": "计算机地址位数"
        },
        {
            "title": "以下叙述中错误的是（ ）",
            "date": "C程序可以在一行上写多条语句 书写风格良好的程序易读性好 书写风格良好的程序执行效率高 C程序允许将一条语句分写在多行上",
            "answer": "书写风格良好的程序执行效率高"
        },
        {
            "title": "以下非法的字符常量是（ ）",
            "date": "nbsp;39;39; nbsp;39;!39; nbsp;39;A39; nbsp;39;39;",
            "answer": "nbsp;39;39;"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "一条语句只能定义一个数组 每个数组包含一组具有同一类型的变量，这些变量在内存中占有连续的存储单元 数组说明符的一对方括号中只能使用整型常量，而不能使用表达式 在引用数组元素时，下标表达式可以使用浮点数",
            "answer": "每个数组包含一组具有同一类型的变量，这些变量在内存中占有连续的存储单元"
        },
        {
            "title": "属于软件详细设计阶段任务的是（ ）",
            "date": "数据库逻辑设计 编写概要设计文档 模块实现的算法设计 软件体系结构设计",
            "answer": "模块实现的算法设计"
        },
        {
            "title": "设顺序表的长度为n。下列算法中，最坏情况下比较次数等于n(n-1)/2的是（ ）",
            "date": "顺序查找 寻找最大项 堆排序 快速排序",
            "answer": "快速排序"
        },
        {
            "title": "表达式3.6-5/2+1.2+5%2的值是（ ）",
            "date": "3.3 4.8 4.3 3.8",
            "answer": "3.8"
        },
        {
            "title": "若程序中有宏定义行：#define N 100则以下叙述中正确的是（ ）",
            "date": "在编译程序对C源程序进行预处理时用100替换标识符N 在运行时用100替换标识符N 上述宏定义行实现将100赋给标示符N 宏定义行中定义了标识符N的值为整数100",
            "answer": "在编译程序对C源程序进行预处理时用100替换标识符N"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "设有指针变量为 double p，则 p+1 将指针p移动8个字节 基类型不同的指针变量可以相互混用 函数的形参类型不能是指针类型 函数的类型不能是指针类型",
            "answer": "设有指针变量为 double p，则 p+1 将指针p移动8个字节"
        },
        {
            "title": "顺序程序不具有（ ）",
            "date": "顺序性 并发性 可再现性 封闭性",
            "answer": "并发性"
        },
        {
            "title": "设文件指针fp已定义，执行语句fp=fopen(\"file\",\"w\");后，以下针对文本文件file操作叙述的选项中正确的是（ ）",
            "date": "可以在原有内容后追加写 可以随意读和写 只能写不能读 写操作结束后可以从头开始读",
            "answer": "只能写不能读"
        },
        {
            "title": "有如下程序段 for(i=0;i＜10;i++) if(i＞5) break;则循环结束后i的值为（ ）",
            "date": "9 5 10 6",
            "answer": "6"
        },
        {
            "title": "以下选项中合法的变量是（ ）",
            "date": "A sizeof _10_ 5a",
            "answer": "_10_"
        },
        {
            "title": "下列算法中，最坏情况下时间复杂度最低的是（ ）",
            "date": "堆排序 顺序查找 有序表的对分查找 寻找最大项",
            "answer": "有序表的对分查找"
        },
        {
            "title": "下面选项中关于编译预处理的叙述正确的是（ ）",
            "date": "凡是以号开头的行，都被称为编译预处理命令行 预处理命令行的作用域是到最近的函数结束处 预处理命令行不能出现在程序的最后一行 预处理命令行必须使用分号结尾",
            "answer": "凡是以号开头的行，都被称为编译预处理命令行"
        },
        {
            "title": "结构化程序设计中，下面对goto语句使用描述正确的是（ ）",
            "date": "应避免滥用goto语句 以上说法均不对 禁止使用goto语句 使用goto语句程序效率高",
            "answer": "应避免滥用goto语句"
        },
        {
            "title": "以下选项中，合法的C语言实数是（ ）",
            "date": "0.10E 2.1e0.2 E1 .1e0",
            "answer": ".1e0"
        },
        {
            "title": "在数据库管理技术发展的三个阶段中，没有专门的软件对数据进行管理的是（  ）。",
            "date": "文件系统阶段和数据库阶段 人工管理阶段 人工管理阶段和文件系统阶段 文件系统阶段",
            "answer": "人工管理阶段"
        },
        {
            "title": "结构化程序设计风格强调的是（ ）",
            "date": "不考虑goto语句的限制使用 程序的执行效率 程序的可移植性 程序的易读性",
            "answer": "程序的易读性"
        },
        {
            "title": "设栈的顺序存储空间为S(1:50)，初始状态为top=0。现经过一系列入栈与退栈运算后，top=20，则当前栈中的元素个数为（ ）",
            "date": "30 19 29 20",
            "answer": "20"
        },
        {
            "title": "下面不属于系统软件的是（  ）。",
            "date": "数据库管理系统 杀毒软件 编译程序 操作系统",
            "answer": "杀毒软件"
        },
        {
            "title": "若有定义：int a, b, c; 以下选项中的赋值语句正确的是（ ）",
            "date": "a + b = c; a = (b == c) = 1; a = (b = c) + 1; (a = b) = c = 1;",
            "answer": "a = (b = c) + 1;"
        },
        {
            "title": "以下叙述中错误的是（ ）",
            "date": "用户定义的函数中可以没有return语句 用户定义的函数中可以有多个return语句，以便可以调用一次返回多个函数值 函数的return语句中可以没有表达式 用户定义的函数中若没有return语句，则应当定义函数为void类型",
            "answer": "用户定义的函数中可以有多个return语句，以便可以调用一次返回多个函数值"
        },
        {
            "title": "下面不属于结构化程序设计原则的是（ ）",
            "date": "模块化 自顶向下 逐步求精 可继承性",
            "answer": "可继承性"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "程序执行的效率只取决于所处理的数据量 程序执行的效率与数据的存储结构密切相关 程序执行的效率只取决于程序的控制结构 以上说法均错误",
            "answer": "程序执行的效率与数据的存储结构密切相关"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "由构成的逻辑表达式与由构成的逻辑表达式都有\"短路\"现象 逻辑\"或\"（即运算符）的运算级别比算术运算要高 C语言的关系表达式：0＜x＜10完全等价于: (0＜x) (x＜10) 逻辑\"非\"（即运算符!）的运算级别是最低的",
            "answer": "由构成的逻辑表达式与由构成的逻辑表达式都有\"短路\"现象"
        },
        {
            "title": "以下结构体类型说明和变量定义中正确的是（ ）",
            "date": "C t1,t2; typedef struct{ int n; char c; } REC; C t1,t2; struct REC ;{ int n; char c; };",
            "answer": "typedef struct{ int n; char c; } REC;"
        },
        {
            "title": "以下关于地址和指针的叙述中正确的是（ ）",
            "date": "可以取一个指针变量的地址赋给本指针变量，这样就使得指针变量指向自身 所有指针变量如果未赋初值，则自动赋空值NULL 可以取变量的地址赋值给同类型的指针变量 可以取常量的地址赋值给同类型的指针变量",
            "answer": "可以取变量的地址赋值给同类型的指针变量"
        },
        {
            "title": "当没有指定C语言中函数形参的存储类别时，函数形参的存储类别是（ ）",
            "date": "寄存器(register) 自动(auto) 外部（extern） 静态(static)",
            "answer": "自动(auto)"
        },
        {
            "title": "下面关于位运算符的叙述，正确的是（ ）",
            "date": "表示\"按位或\"的运算 ~表示\"按位异或\"的运算 表示\"按位与\"的运算 表示\"按位异或\"的运算",
            "answer": "表示\"按位与\"的运算"
        },
        {
            "title": "下面不属于对象主要特征的是（ ）",
            "date": "多态性 封装性 可复用性 唯一性",
            "answer": "可复用性"
        },
        {
            "title": "与数学表达式x≥y≥z对应的C语言表达式是（ ）",
            "date": "(x＞=y)!(y＞=z) (x＞=y＞=z) (x＞=y)(y＞=z) (x＞=y)(y＞=x)",
            "answer": "(x＞=y)(y＞=z)"
        },
        {
            "title": "当变量c的值不为2、4、6时，值为\"真\"的表达式是（ ）",
            "date": "(c==2)(c==4)(c==6) (c＞=2 c＜=6)(c2!=1) (c＞=2 c＜=6) (c!=3) (c!=5) (c＞=2 c＜=6) !(c2)",
            "answer": "(c＞=2 c＜=6) (c!=3) (c!=5)"
        },
        {
            "title": "按照C语言规定的用户标识符命名规则，不能出现在标识符中的是(  )。",
            "date": "连接符 数字字符 大写字母 下划线",
            "answer": "连接符"
        },
        {
            "title": "设已有定义：float x;，则以下对指针变量p进行定义且赋初值的语句中正确的是（ ）",
            "date": "float p＝x； float p＝x； int p＝(float)x； float p＝1024；",
            "answer": "float p＝x；"
        },
        {
            "title": "结构化程序设计强调（  ）。",
            "date": "程序的易读性 程序的规模 程序的可复用性 程序的效率",
            "answer": "程序的易读性"
        },
        {
            "title": "以下选项中，合法的C语言实数是（ ）",
            "date": ".2e0 3.1e0.4 E13 7.12E",
            "answer": ".2e0"
        },
        {
            "title": "设有以下程序段：int y;y=rand() % 30+1;则变量y的取值范围是（ ）",
            "date": "0＜y≤30 1＜y≤30 1＜y＜30 0≤y≤30",
            "answer": "0＜y≤30"
        },
        {
            "title": "C源程序中不能表示的数制是（ ）",
            "date": "二进制 十进制 八进制 十六进制",
            "answer": "二进制"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "C语言程序将从源程序中第一个函数开始执行 main的各种大小写拼写形式都可以作为主函数名，如：MAIN，Main等 可以在程序中由用户指定任意一个函数作为主函数，程序将从此开始执行 C语言规定必须用main作为主函数名，程序将从此开始执行",
            "answer": "C语言规定必须用main作为主函数名，程序将从此开始执行"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "函数调用时，不必区分函数名称的大小写 函数名允许用数字开头 调用函数时，函数名必须与被调用的函数名完全一致 在函数体中只能出现一次return语句",
            "answer": "调用函数时，函数名必须与被调用的函数名完全一致"
        },
        {
            "title": "结构化程序设计中，下面对goto语句使用描述正确的是",
            "date": "应避免滥用goto语句 以上说法均错误 使用goto语句程序效率高 禁止使用goto语句",
            "answer": "应避免滥用goto语句"
        },
        {
            "title": "下面叙述正确的是（ ）",
            "date": "C语言程序可以定义多个不同内容的main函数 包含全部三种基本结构的程序才是结构化程序 任何复杂任务都可以分解成简单子任务 C语言程序的所有函数只能处于同一个源文件中WEr",
            "answer": "任何复杂任务都可以分解成简单子任务"
        },
        {
            "title": "若有定义和语句： int a, b; scanf(\"%d,%d,\",&a,&b); 以下选项中的输入数据，不能把值3赋给变量a、5赋给变量b的是（ ）",
            "date": "3,5,4 3,5 3,5, 3 ,5",
            "answer": "3 ,5"
        },
        {
            "title": "以下选项中叙述正确的是（ ）",
            "date": "C程序中的注释可以嵌套 C程序必须由main语句开始 函数体必须由 { 开始 C程序中的注释必须在一行完成",
            "answer": "函数体必须由 { 开始"
        },
        {
            "title": "进程是（  ）。",
            "date": "存放在内存中的程序 与程序等效的概念 一个系统软件 程序的执行过程",
            "answer": "程序的执行过程"
        },
        {
            "title": "表达式 a+=a-=a=9 的值是（ ）",
            "date": "18 0 9 9",
            "answer": "0"
        },
        {
            "title": "下列叙述中错误的是（ ）",
            "date": "虚拟存储器使存储系统既具有相当于外存的容量又有接近于主存的访问速度 虚拟存储器的空间大小就是实际外存的大小 虚拟存储器的空间大小取决于计算机的访存能力 实际物理存储空间可以小于虚拟地址空间",
            "answer": "虚拟存储器的空间大小就是实际外存的大小"
        },
        {
            "title": "以下选项中非法的C语言字符常量是（ ）",
            "date": "39;939; 39;＼0939; 39;＼x0939; 39;＼x9d39;",
            "answer": "39;＼0939;"
        },
        {
            "title": "C语言中的标识符分为关键字、预定义标识符和用户标识符，以下叙述正确的是（ ）",
            "date": "关键字可用作用户标识符，但失去原有含义 预定义标识符可用作用户标识符，但失去原有含义 在标识符中大写字母和小写字母被认为是相同的字符 用户标识符可以由字母和数字任意顺序组成",
            "answer": "预定义标识符可用作用户标识符，但失去原有含义"
        },
        {
            "title": "不能正确表示数学式的表达式是",
            "date": "a(b/c) ab/c a/cb a/ b c",
            "answer": "a/ b c"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "算法设计只需考虑得到计算结果 所谓算法就是计算方法 算法设计可以忽略算法的运算时间 程序可以作为算法的一种描述方法",
            "answer": "程序可以作为算法的一种描述方法"
        },
        {
            "title": "关于地址和指针，以下说法正确的是（ ）",
            "date": "可以取一个常数的地址赋值给同类型的指针变量 通过强制类型转换可以将一种类型的指针变量赋值给另一种类型的指针变量 可以取一个表达式的地址赋值给同类型的指针变量 可以取一个指针变量的地址赋值给基类型相同的指针变量",
            "answer": "通过强制类型转换可以将一种类型的指针变量赋值给另一种类型的指针变量"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "int p1; int p2; int p3;都是合法的定义指针变量的语句 指针变量只能通过求地址运算符（) 来获得地址值 语句p=NULL;与p=0;是等价的语句 语句p=NULL;执行后，指针p指向地址为0的存储单元",
            "answer": "int p1; int p2; int p3;都是合法的定义指针变量的语句"
        },
        {
            "title": "若有定义语句：char s[10]=\"1234567\";则strlen(s)的值是（  ）",
            "date": "nbsp;10 nbsp;8 nbsp;9 nbsp;7",
            "answer": "nbsp;7"
        },
        {
            "title": "关于算法，以下叙述中错误的是（ ）",
            "date": "一个算法对于某个输入的循环次数是可以事先估计出来的 同一个算法对于相同的输入必须得出相同的结果 任何算法都能转换成计算机高级语言的程序，并在有限时间内运行完毕 某个算法可能会没有输入",
            "answer": "任何算法都能转换成计算机高级语言的程序，并在有限时间内运行完毕"
        },
        {
            "title": "if语句的基本形式是：if (表达式) 语句，以下关于\"表达式\"值的叙述中正确的是",
            "date": "必须是正数 必须是逻辑值 必须是整数值 可以是任意合法的数值",
            "answer": "可以是任意合法的数值"
        },
        {
            "title": "以下选项中合法的实型常量是（ ）",
            "date": "3.13e2.1 0 2.010 .914",
            "answer": ".914"
        },
        {
            "title": "下面选项中关于位运算的叙述正确的是（ ）",
            "date": "位运算符都需要两个操作数 右移运算时，高位总是补0 左移运算的结果总是原操作数据2倍 位运算的对象只能是整型或字符型数据",
            "answer": "位运算的对象只能是整型或字符型数据"
        },
        {
            "title": "若有以下程序段：int r=8; printf(\"%d\",r＞＞1 );输出结果是（ ）",
            "date": "2 4 8 16",
            "answer": "4"
        },
        {
            "title": "下面选项中合法的字符常量是（ ）",
            "date": "39;＼39; 39;abc39; quot;Xquot; 39;X39;",
            "answer": "39;X39;"
        },
        {
            "title": "在一个C源程序文件中所定义的全局变量，其作用域为(  )。",
            "date": "所在文件的全部范围 所在函数的全部范围 由具体定义位置和extern说明来决定范围 所在程序的全部范围",
            "answer": "由具体定义位置和extern说明来决定范围"
        },
        {
            "title": "在以下给出的表达式中，与while(E)中的(E)不等价的表达式是（ ）",
            "date": "(! E==0) (E==0) (E＞0E＜0) (E!=0)",
            "answer": "(E==0)"
        },
        {
            "title": "黑盒测试技术依据的是（ ）",
            "date": "程序的逻辑结构 软件功能的描述 软件行为的描述 程序的物理结构",
            "answer": "软件功能的描述"
        },
        {
            "title": "以下对C语言函数的叙述中正确的是（ ）",
            "date": "程序中有调用关系的所有函数必须放在同一个源程序中 调用函数时，只能把实参的值传给形参，形参的值不能传给实参 函数既能嵌套定义，又能递归定义 函数必须有返回值，否则不能使用",
            "answer": "调用函数时，只能把实参的值传给形参，形参的值不能传给实参"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "scanf和printf是C语言提供的输入和输出语句 由printf输出的数据的实际精度是由格式控制中的域宽和小数的域宽来完全决定的 赋值语句是一种执行语句，必须放在函数的可执行部分 由printf输出的数据都隐含左对齐",
            "answer": "赋值语句是一种执行语句，必须放在函数的可执行部分"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "具有多个指针域的链表一定属于非线性结构 循环队列是队列的一种存储结构，它属于非线性结构 采用顺序存储的完全二叉树属于非线性结构 具有两个以上根结点的数据结构有可能是线性结构",
            "answer": "采用顺序存储的完全二叉树属于非线性结构"
        },
        {
            "title": "属于结构化程序设计原则的是（ ）",
            "date": "可封装性 多态性 模块化 可继承性",
            "answer": "模块化"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "算法时间复杂度的度量与计算机运行速度有关 算法空间复杂度的度量与数据的存储结构无关 算法时间复杂度的度量与计算机存储空间有关 数据的处理效率与数据的存储结构有关",
            "answer": "数据的处理效率与数据的存储结构有关"
        },
        {
            "title": "以下叙述中错误的是（ ）",
            "date": "函数的返回值类型不能是结构体类型，只能是简单类型 可以通过指针变量来访问结构体变量的任何成员 函数可以返回指向结构体变量的指针 只要类型相同，结构体变量之间可以整体赋值",
            "answer": "函数的返回值类型不能是结构体类型，只能是简单类型"
        },
        {
            "title": "以下不能用于描述算法的是（ ）",
            "date": "文字叙述 ER图 伪代码和流程图 程序语句",
            "answer": "ER图"
        },
        {
            "title": "以下不能对文件进行输出的库函数是（ ）",
            "date": "fputc fwrite fprintf fpout",
            "answer": "fpout"
        },
        {
            "title": "下面属于良好程序设计风格的是（ ）",
            "date": "程序输入输出的随意性 源程序文档化 随意使用无条件转移语句 程序效率第一",
            "answer": "源程序文档化"
        },
        {
            "title": "结构化程序的三种基本控制结构是（ ）",
            "date": "顺序、选择和重复（循环） 过程、子程序和分程序 调用、返回和转移 顺序、选择和调用",
            "answer": "顺序、选择和重复（循环）"
        },
        {
            "title": "以下关于函数的叙述中正确的是（ ）",
            "date": "函数调用必须传递实参 函数必须要有形参 函数形参的类型与返回值的类型无关 函数必须要有返回值",
            "answer": "函数形参的类型与返回值的类型无关"
        },
        {
            "title": "以下关于C语言数据类型使用的叙述中错误的是（ ）",
            "date": "整数类型表示的自然数是准确无误差的 若只处理\"真\"和\"假\"两种逻辑值，应使用逻辑类型 若要处理如\"人员信息\"等含有不同类型的相关数据，应自定义结构体类型 若要保存带有多位小数的数据，可使用双精度类型",
            "answer": "若只处理\"真\"和\"假\"两种逻辑值，应使用逻辑类型"
        },
        {
            "title": "定义无符号整数类为UInt，下面可以作为类UInt实例化值的是（ ）",
            "date": "0.0521 整数集合{1,2,3,4,5,6} 521 521",
            "answer": "521"
        },
        {
            "title": "以下叙述中错误的是（ ）",
            "date": "当在程序的开头包含头文件stdio.h时，可以给指针变量赋NULL 函数可以返回地址值 可以给指针变量赋一个整数作为地址值 改变函数形参的值，不会改变对应实参的值",
            "answer": "可以给指针变量赋一个整数作为地址值"
        },
        {
            "title": "若fp已定义为指向某文件的指针，且没有读到该文件的末尾，则C语言函数feof(fp)的函数返回值是（ ）",
            "date": "1 EOF 非0 0",
            "answer": "0"
        },
        {
            "title": "下面对“类-对象”主要特征描述正确的是（ ）",
            "date": "类的单一性 对象无关性 类的依赖性 对象唯一性",
            "answer": "对象唯一性"
        },
        {
            "title": "若变量已正确定义：for( x=0,y=0; ( y!=99 && x＜4 ); x++ )则以上for循环（ ）",
            "date": "执行3次 执行无限次 执行4次 执行次数不定",
            "answer": "执行4次"
        },
        {
            "title": "设有定义：int a=64,b=8;，则表达式(a&b)||(a&&b)和(a|b)&&(a||b)的值分别为（ ）",
            "date": "1和1 0和0 1和0 0和1",
            "answer": "1和1"
        },
        {
            "title": "下列与队列结构有关联的是（ ）",
            "date": "先到先服务的作业调度 多重循环的执行 数组元素的引用 函数的递归调用",
            "answer": "先到先服务的作业调度"
        },
        {
            "title": "若有定义：char c; int d; 程序运行时输入：c=1,d=2＜回车＞，能把字符1输入给变量c、整数2输入给变量d的输入语句是（ ）",
            "date": "scanf(\"c=d,d=d\", c,d); scanf(\"c=d d=d\", c,d); scanf(\"c=c d=d\", c,d); scanf(\"c=c,d=d\", c,d);",
            "answer": "scanf(\"c=c,d=d\", c,d);"
        },
        {
            "title": "以下叙述中错误的是（ ）",
            "date": "C程序对预处理命令行的处理是在程序执行的过程中进行的 在程序中凡是以\"\"开始的语句行都是预处理命令行 预处理命令行的最后不能以分号表示结束 define MAX 是合法的宏定义命令行",
            "answer": "C程序对预处理命令行的处理是在程序执行的过程中进行的"
        },
        {
            "title": "以下表达式的值与x无关、其值恒为真的是（ ）",
            "date": "x＞10 x＜5 x＜10 x＞5 x＞10 x＜5 0 ＜ x ＜ 5",
            "answer": "0 ＜ x ＜ 5"
        },
        {
            "title": "设变量已正确定义并赋值，以下正确的表达式是(  )。",
            "date": "x＝25%5.0 x＝y＋z＋5，＋＋y int(15.8%5) x＝y*5＝x＋z",
            "answer": "x＝y＋z＋5，＋＋y"
        },
        {
            "title": "对数据库数据的存储方式和物理结构的逻辑进行描述的是（ ）",
            "date": "模式 外模式 内模式 用户模式",
            "answer": "内模式"
        },
        {
            "title": "在长度为97的顺序有序表中作二分查找，最多需要的比较次数为（ ）",
            "date": "96 6 7 48",
            "answer": "7"
        },
        {
            "title": "设有定义：int x=0, *p; 紧接着的赋值语句正确的是（ ）",
            "date": "p=NULL; p=x; p=NULL; p=x;",
            "answer": "p=NULL;"
        },
        {
            "title": "以下选项中，合法的数值型常量是（ ）",
            "date": "\"A\" 0xDH 3.1415 092",
            "answer": "3.1415"
        },
        {
            "title": "设顺序表的长度为40，对该表进行冒泡排序。在最坏情况下需要的比较次数为（ ）",
            "date": "41 40 780 820",
            "answer": "780"
        },
        {
            "title": "设有定义：double a[10],*s=a;以下能够代表数组元素a[3]的是（ ）",
            "date": "(s)[3] (s+3) s+3 s[3]",
            "answer": "(s+3)"
        },
        {
            "title": "以下非法的定义语句是（ ）",
            "date": "long b=0L; unsigned int a= 100u; int d=0x0; short c2=0123;",
            "answer": "unsigned int a= 100u;"
        },
        {
            "title": "函数调用语句：fun( ( exp1, exp2 ),( exp1, exp2, exp3) ); 含有的实参个数是",
            "date": "2 4 1 5",
            "answer": "2"
        },
        {
            "title": "以下叙述中错误的是（ ）",
            "date": "可以用typedef说明的新类型名来定义变量 typedef说明的新类型名必须使用大写字母，否则会出编译错误 用typedef可以说明一种新的类型名 typedef的作用是用一个新的标识符来代表已存在的类型名",
            "answer": "typedef说明的新类型名必须使用大写字母，否则会出编译错误"
        },
        {
            "title": "要在具有n个元素的有序顺序表中删除一个元素，删除后仍是有序顺序表，则在最坏情况下需要移动的元素个数为（ ）",
            "date": "n n/2 n1 n+1",
            "answer": "n1"
        },
        {
            "title": "下列选项中属于面向对象设计方法主要特征的是（ ）",
            "date": "自顶向下 模块化 继承 逐步求精",
            "answer": "继承"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "当用scanf从键盘输入数据时，每行数据在没按下回车键（Enter键) 前，可以任意修改 复合语句在语法上包含多条语句，其中不能定义局部变量 空语句就是指程序中的空行 花括号对{}只能用来表示函数的开头和结尾，不能用于其他目的",
            "answer": "当用scanf从键盘输入数据时，每行数据在没按下回车键（Enter键) 前，可以任意修改"
        },
        {
            "title": "若要求从键盘读入含有空格字符的字符串，应使用函数（ ）",
            "date": "getchar() getc() gets() scanf()",
            "answer": "gets()"
        },
        {
            "title": "有关系如下图所示，若B为键，则最后一条记录违反了（  ）",
            "date": "参照完整性约束 逻辑完整性约束 用户定义的完整性约束 实体完整性约束",
            "answer": "实体完整性约束"
        },
        {
            "title": "在数据库技术中，为提高数据库的逻辑独立性和物理独立性，数据库的结构被划分成用户级、存储级和（ ）",
            "date": "内部级 外部级 管理员级 概念级",
            "answer": "概念级"
        },
        {
            "title": "在C语言中，只有在使用时才占用内存单元的变量，其存储类型是（ ）",
            "date": "auto和static auto和register extern和register static和register",
            "answer": "auto和register"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "不同函数的形式参数不能使用相同名称的标识符 在C语言的函数内部，可以定义局部嵌套函数 用户自己定义的函数只能调用库函数 实用的C语言源程序总是由一个或多个函数组成",
            "answer": "实用的C语言源程序总是由一个或多个函数组成"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "当对文件的读(写)操作完成之后，必须将它关闭，否则可能导致数据丢失 在一个程序中当对文件进行了写操作后，必须先关闭该文件然后再打开，才能读到第1个数据 C语言中的文件是流式文件，因此只能顺序存取数据 打开一个已存在的文件并进行了写操作后，原有文件中的全部数据必定被覆盖",
            "answer": "当对文件的读(写)操作完成之后，必须将它关闭，否则可能导致数据丢失"
        },
        {
            "title": "下面对“对象”概念描述正确的是（ ）",
            "date": "方法是对象的静态属性 对象是对象名和方法的封装体 任何对象都必须有继承性 对象是属性和方法的封装体",
            "answer": "对象是属性和方法的封装体"
        },
        {
            "title": "若有以下定义：int x[10],*pt=x;则对x数组元素的正确引用是（ ）",
            "date": "pt+3 (x+3) (pt+10) x[10]",
            "answer": "(x+3)"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "只有一个指针域的链表一定是线性结构 线性链表可以有多个指针域 线性链表最多可以有两个指针域 有两个以上指针域的链表是非线性结构",
            "answer": "线性链表可以有多个指针域"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "在scanf函数中的格式控制字符串是为了输入数据用的，不会输出到屏幕上 在printf函数中，各个输出项只能是变量 使用printf函数无法输出百分号 在使用scanf函数输入整数或实数时，输入数据之间只能用空格来分隔",
            "answer": "在scanf函数中的格式控制字符串是为了输入数据用的，不会输出到屏幕上"
        },
        {
            "title": "已定义以下函数 int fun( int *p) { return *p; }fun函数返回值是（ ）",
            "date": "一个整数 不确定的值 形参p的地址值 形参p中存放的值",
            "answer": "一个整数"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "书写源程序时，必须注意缩进格式，否则程序会有编译错误 程序可以包含多个主函数，但总是从第一个主函数处开始执行 程序的主函数名除main外，也可以使用Main或_main 在C程序中，模块化主要是通过函数来实现的",
            "answer": "在C程序中，模块化主要是通过函数来实现的"
        },
        {
            "title": "下列叙述中错误的是（ ）",
            "date": "算法的时间复杂度与使用的程序设计语言无关 算法的时间复杂度与实现算法过程中的具体细节无关 算法的时间复杂度与使用的计算机系统无关 对于各种特定的输入,算法的时间复杂度是固定不变的",
            "answer": "对于各种特定的输入,算法的时间复杂度是固定不变的"
        },
        {
            "title": "流程图是描述算法的很好的工具，一般的流程图中由几种基本图形组成。其中输入输出框的图形是（ ）",
            "date": "平行四边形 菱形 椭圆型 长方形",
            "answer": "平行四边形"
        },
        {
            "title": "以下叙述正确的是（ ）",
            "date": "文件指针变量的值是文件的当前读取位置 文件指针变量的值是文件在当前读取位置处数据的值 文件指针是指针类型的变量 调用fscanf函数能向所有类型的文件中写入任意字符",
            "answer": "文件指针是指针类型的变量"
        },
        {
            "title": "设有定义：int a,b; float x,y; ，则以下选项中对语句所作的注释叙述错误的是（ ）",
            "date": "scanf(\"dd\",a,b,x); / 多余的输入项不能获得输入数据 / scanf(\"Input:dd\",a,b); / 格式串中允许加入格式符以外的字符串 / scanf(\"ddf\",a,b); / 多余的格式符f完全不起作用 / scanf(\"dfd\",a,b,x); / 输入项与格式符类型不匹配，变量b和x得不到正确的输入数据 /",
            "answer": "scanf(\"ddf\",a,b); / 多余的格式符f完全不起作用 /"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "char c1, c2, c3, c4[40];是合法的变量定义语句 数组下标的下限由数组中第一个非零元素的位置决定 数组下标的下限是1 数组下标的下限由数组中第一个被赋值元素的位置决定",
            "answer": "char c1, c2, c3, c4[40];是合法的变量定义语句"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "C语言本身没有提供对字符串进行整体操作的运算符 两个字符串可以用关系运算符进行大小比较 当拼接两个字符串时，结果字符串占用的内存空间是两个原串占用空间的和 函数调用strlen(s);会返回字符串s实际占用内存的大小（以字节为单位)",
            "answer": "C语言本身没有提供对字符串进行整体操作的运算符"
        },
        {
            "title": "以下叙述正确的是（ ）",
            "date": "数组下标的最小值可以是负值 char c1, c2, c3, c4[2]; 是C语言的合法语句 若有数组定义 int array[5]; 则语句 printf(\"d\",array[1.23]);是合法的 不能在数组说明符的一对方括号中使用表达式",
            "answer": "char c1, c2, c3, c4[2]; 是C语言的合法语句"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "一个算法的空间复杂度大，则其时间复杂度也必定大 一个算法的空间复杂度大，则其时间复杂度必定小 一个算法的时间复杂度大，则其空间复杂度必定小 算法的时间复杂度与空间复杂度没有直接关系",
            "answer": "算法的时间复杂度与空间复杂度没有直接关系"
        },
        {
            "title": "设循环队列的存储空间为Q(1:100)，初始状态为空。现经过一系列正常操作后，front=49，则循环队列中的元素个数为（ ）",
            "date": "51 不确定 50 49",
            "answer": "不确定"
        },
        {
            "title": "表示关系式x≤y≤z的C语言表达式的是（ ）",
            "date": "x＜=y)!(y＜=x) (x＜=y＜=z) (x＜=y)(y＜=z) (x＜=y)(y＜=x)",
            "answer": "(x＜=y)(y＜=z)"
        },
        {
            "title": "若变量已正确定义并赋值，以下不能构成C语句的选项是（ ）",
            "date": "A?a:b; B++; a=a+b A=a+b;",
            "answer": "a=a+b"
        },
        {
            "title": "以下选项中，合法的实数是（ ）",
            "date": "4.5E2 E1.3 1.2E1.2 7.11E",
            "answer": "4.5E2"
        },
        {
            "title": "有以下程序段： int m[2][3],(*p)[3]; p=m;则以下对m数组元素的引用正确的是（ ）",
            "date": "((p+2)+1) p[1]+2 (p+1)[0] (p[1]+1)",
            "answer": "(p[1]+1)"
        },
        {
            "title": "设二叉树的前序序列为ABDEGHCFIJ，中序序列为DBGEHACIFJ。则按层次输出（从上到下，同一层从左到右）的序列为（  ）。",
            "date": "DGHEBIJFCA JIHGFEDCBA ABCDEFGHIJ GHIJDEFBCA",
            "answer": "ABCDEFGHIJ"
        },
        {
            "title": "下面属于“对象”成份之一的是（ ）",
            "date": "规则 封装 属性 继承",
            "answer": "属性"
        },
        {
            "title": "以下叙述中错误的是（ ）",
            "date": "在函数内部定义的变量只能在本函数范围内使用 在不同的函数中可以使用相同名字的变量 在函数外部定义的变量在所有函数中都有效 函数中的形参属于局部变量",
            "answer": "在函数外部定义的变量在所有函数中都有效"
        },
        {
            "title": "数据模型包括数据结构、数据完整性约束和（ ）",
            "date": "查询 数据类型 关系运算 数据操作",
            "answer": "数据操作"
        },
        {
            "title": "下面选项中关于\"文件指针\"概念的叙述正确的是（ ）",
            "date": "文件指针就是文件位置指针，表示当前读写数据的位置 文件指针是程序中用FILE定义的指针变量 把文件指针传给fscanf函数，就可以向文本文件中写入任意的字符 文件指针指向文件在计算机中的存储位置",
            "answer": "文件指针是程序中用FILE定义的指针变量"
        },
        {
            "title": "下面关于多道程序环境下特点描述正确的是（ ）",
            "date": "各进程之间不存在相互制约关系 进程调度负责所有系统资源的分配 各进程被创建的顺序与各进程终止的顺序是一致的 程序和计算机执行程序的活动不再一一对应",
            "answer": "程序和计算机执行程序的活动不再一一对应"
        },
        {
            "title": "设fp为指向某二进制文件的指针，且已读到此文件末尾，则函数feof(fp) 的返回值为（  ）",
            "date": "nbsp;NULL nbsp;0 nbsp;39;39; nbsp;非0值",
            "answer": "nbsp;非0值"
        },
        {
            "title": "设有定义：struct {char mark[12]; int num1; double num2;} t1,t2;若变量均已正确赋初值，则以下语句中错误的是（ ）",
            "date": "t2.num2=t1.num2; t2.mark=t1.mark; t2.num1=t1.num1; t1=t2;",
            "answer": "t2.mark=t1.mark;"
        },
        {
            "title": "设栈的顺序存储空间为S(1:m)，初始状态为top=m+1，则栈中的数据元素个数为（ ）",
            "date": "mtop+1 mtop topm+1 topm",
            "answer": "mtop+1"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "字符常量是不能进行关系运算的 字符常量需要用单引号括起来 字符常量在内存中占2个字节 转义字符要用双引号括起来，以便与普通的字符常量区分开",
            "answer": "字符常量需要用单引号括起来"
        },
        {
            "title": "结构化程序由顺序、选择、循环三种基本结构组成，以下相关叙述错误的是（ ）",
            "date": "循环结构是根据条件决定是否重复、重复执行多少次循环体语句 顺序结构是按语句在程序中的先后顺序逐条执行，没有分支，没有转移 三种基本结构不可以嵌套使用 选择结构是根据不同的条件执行不同分支中的语句",
            "answer": "三种基本结构不可以嵌套使用"
        },
        {
            "title": "软件是（  ）。",
            "date": "程序、数据和文档的集合 计算机系统 程序和数据 程序",
            "answer": "程序、数据和文档的集合"
        },
        {
            "title": "下列关系表达式中，结果为\"假\"的是（ ）",
            "date": "(3 ＜ 4) == 1 (3 + 4) ＞ 6 3 ＜= 4 (3 != 4) ＞ 2",
            "answer": "(3 != 4) ＞ 2"
        },
        {
            "title": "以下关于宏的叙述中正确的是（ ）",
            "date": "宏定义必须位于源程序中所有语句之前 宏替换没有数据类型限制 宏名必须用大写字母表示 宏调用比函数调用耗费时间",
            "answer": "宏替换没有数据类型限制"
        },
        {
            "title": "以下选项中，与n=i++ 完全等价的表达式是（ ）",
            "date": "i=i+1,n=i n=++i n+=i+1 n=i,i=i+1",
            "answer": "n=i,i=i+1"
        },
        {
            "title": "有以下程序：#include ＜stdio.h＞int add(int a，int b){ return (a＋b)；}main(){ int k，(*f)()，a＝5，b＝10； f＝add； …}则以下函数调用语句错误的是（ ）",
            "date": "k＝add(a，b)； k＝f(a，b)； k＝f(a，b)； k＝(f)(a，b)；",
            "answer": "k＝f(a，b)；"
        },
        {
            "title": "指令中的地址码部分给出了存放操作数地址的地址的寻址方式是（ ）",
            "date": "直接寻址 隐含寻址 间接寻址 立即寻址",
            "answer": "间接寻址"
        },
        {
            "title": "以下选项中合法的常量是（ ）",
            "date": "9 9 9 0Xab 123E 0.2 2.7e",
            "answer": "0Xab"
        },
        {
            "title": "在数据库中存储的是（  ）。",
            "date": "操作信息 数据模型 数据的操作 数据以及数据之间的联系",
            "answer": "数据以及数据之间的联系"
        },
        {
            "title": "下列存储管理技术中，采用静态地址重定位的是（ ）",
            "date": "页式存储管理 段式存储管理 段页式存储管理 固定分区存储管理",
            "answer": "固定分区存储管理"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "只有在函数内部定义的变量才是局部变量 局部变量不能被说明为static 只要是用户定义的标识符，都有一个有效的作用域 只有全局变量才有自己的作用域，函数中的局部变量没有作用域",
            "answer": "只要是用户定义的标识符，都有一个有效的作用域"
        },
        {
            "title": "若有定义语句：int a[10]={0,1,2,3,4,5,6,7,8,9},*p=a;,以下选项中错误引用a数组元素的是(其中 0≤i＜10) （ ）",
            "date": "((a+i)) ( a[i] ) a[ pa ] p[i]",
            "answer": "((a+i))"
        },
        {
            "title": "以下选项中叙述正确的是（ ）",
            "date": "文件指针的值是文件在计算机磁盘中的路径信息 文件指针可同时指向不同文件 文件指针是指针类型的变量 调用fscanf函数可以向文本文件中写入任意字符",
            "answer": "文件指针是指针类型的变量"
        },
        {
            "title": "以下程序中给数组所有元素输入数据，请从选项中选择正确的答案填入下划线处#include ＜stdio.h＞main(){ int a[10], i=0; while( i＜10 ) scanf(\"%d\", _________ );┋}",
            "date": "a+(i++) a+i a(i++) a[i+1]",
            "answer": "a+(i++)"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "break语句必须与switch语句中的case配对使用 break语句只能用于switch语句 在switch语句中必须使用default 在switch语句中，不一定使用break语句",
            "answer": "在switch语句中，不一定使用break语句"
        },
        {
            "title": "下列叙述中错误的是(  )。",
            "date": "C程序可以由多个程序文件组成 C程序可以由一个或多个函数组成 一个C语言程序只能实现一种算法 一个C函数可以单独作为一个C程序文件存在",
            "answer": "一个C语言程序只能实现一种算法"
        },
        {
            "title": "下列叙述中错误的是（ ）",
            "date": "静态地址重定位是在程序执行之前进行的 动态地址重定位是在程序执行期间进行的 动态地址重定位要求程序必须占用连续固定的内存空间 静态地址重定位要求程序必须占用连续固定的内存空间",
            "answer": "动态地址重定位要求程序必须占用连续固定的内存空间"
        },
        {
            "title": "关系R经过运算σA=B∧C＞4∧D＞3(R)的结果为（ ）",
            "date": "(a,a,2,4) (a,a,2,4)和(e,e,6,1) (e,e,6,1) (c,c,11,4)",
            "answer": "(c,c,11,4)"
        },
        {
            "title": "设有定义：int x=11,y=12,z=0;，以下表达式值不等于12的是（ ）",
            "date": "(z=x,y) (z,x,y) z=(x==y) z=(x,y)",
            "answer": "z=(x==y)"
        },
        {
            "title": "在操作系统中，将文件名转换为文件存储地址的结构是（ ）",
            "date": "文件名 文件目录 路径名 PCB表",
            "answer": "文件目录"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "结构体类型中的各个成分均不能是数组或指针 元素为结构体类型的数组，只能在声明过结构体类型之后，单独进行定义 结构体类型的变量，不能在声明结构体类型组成时一起定义 使用typedef定义新类型名后，新类型名与原类型名实际上是等价的",
            "answer": "使用typedef定义新类型名后，新类型名与原类型名实际上是等价的"
        },
        {
            "title": "以下可以将任意一个两位整数n的个位数与十位数对换的表达式为（ ）",
            "date": "(nn/10)10+(n/10) nn/1010+n/10 n/10+(nn/10) (nn/1010)10+n/10",
            "answer": "(nn/1010)10+n/10"
        },
        {
            "title": "对于while(!E)s;，若要执行循环体s，则E的取值应为（ ）",
            "date": "E等于1 E等于0 E不等于1 E不等于0",
            "answer": "E等于0"
        },
        {
            "title": "设有定义：int a=0,b=1,c=1; 以下选项中，表达式值与其他三个不同的是（ ）",
            "date": "c=a!=c b=a==c a=b=c a=c==b",
            "answer": "b=a==c"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "在C程序中的八进制和十六进制，可以是浮点数 整型变量可以分为int型、short型、long型和unsigned型四种 八进制数的开头要使用英文字母o，否则不能与十进制区分开 英文大写字母X和英文小写字母x都可以作为二进制数字的开头字符",
            "answer": "整型变量可以分为int型、short型、long型和unsigned型四种"
        },
        {
            "title": "设a,b,c是整型变量且均已赋值，则以下选项中错误的赋值语句是（ ）",
            "date": "a = b = c + 10; a = (b = 2) + c; a = 1 + (b = c = 2); a = (b = 3) = 1;",
            "answer": "a = (b = 3) = 1;"
        },
        {
            "title": "下列叙述中正确的是（  ）。",
            "date": "循环队列中的队尾指针一定大于队头指针 循环队列是队列的一种链式存储结构 循环队列是队列的一种顺序存储结构 循环队列中的队尾指针一定小于队头指针",
            "answer": "循环队列是队列的一种顺序存储结构"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "在scanf函数的格式串中，必须有与输入项一一对应的格式转换说明符 只能在printf函数中指定输入数据的宽度，而不能在scanf函数中指定输入数据占的宽度 复合语句也被称为语句块，它至少要包含两条语句 scanf函数中的字符串，是提示程序员的，输入数据时不必管它",
            "answer": "在scanf函数的格式串中，必须有与输入项一一对应的格式转换说明符"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "不能用字符串常量对字符数组名进行整体赋值操作 char str; str = \"Hello\";与char str[]; str = \"Hello\";效果是一样的 char str[7] = \"string!\"; 在语法上是合法的，运行也是安全的 字符串常量\"Hello\"会被隐含处理成一个无名字符型数组，它有5个元素",
            "answer": "不能用字符串常量对字符数组名进行整体赋值操作"
        },
        {
            "title": "下面叙述正确的是（ ）",
            "date": "复杂算法是不能用三种基本结构来表达的 任何算法需要包含三种基本结构中的两种以上 只要是简单算法，它的操作步骤都不会超过20步 C语言程序的语句经过编译和链接转换成二进制机器指令后才能执行",
            "answer": "C语言程序的语句经过编译和链接转换成二进制机器指令后才能执行"
        },
        {
            "title": "以下选项中，能用作数据常量的是(  )。",
            "date": "115L 1.5e1.5 118 o115",
            "answer": "115L"
        },
        {
            "title": "以下选项中，合法的C语言实数是（ ）",
            "date": ".2e0 E13 7.12E 3.1e0.4",
            "answer": "当用scanf从键盘输入数据时，每行数据在没按下回车键（Enter键) 前，可以任意修改"
        },
        {
            "title": "有三个关系R、S和T如下图所示，其中三个关系对应的关键字分别为A、B和复合关键字（A,B）。则T的记录项（b,q,4）违反了（  ）",
            "date": "逻辑完整性约束 实体完整性约束 参照完整性约束 用户定义的完整性约束",
            "answer": "参照完整性约束"
        },
        {
            "title": "不属于对象构成成份的是（ ）",
            "date": "标识 方法（或操作） 规则 属性",
            "answer": "规则"
        },
        {
            "title": "若想给已定义为int型的变量a,b,c,d赋值为1，以下选项中错误的语句是（ ）",
            "date": "a=b, b=c, c=d, d=1; a=1, b=a, c=b, d=c; a=b=c=d=1; d=1, c=d, b=c, a=b;",
            "answer": "a=b, b=c, c=d, d=1;"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "同一英文字母的大写和小写形式代表的是同一个字符常量 字符常量可以参与任何整数运算 转义字符用符号开头 字符变量在定义时不能赋初值",
            "answer": "字符常量可以参与任何整数运算"
        },
        {
            "title": "由以下while构成的循环，循环体执行的次数是（ ）int k=0; while ( k=1 ) k++;",
            "date": "无限次 有语法错，不能执行 一次也不执行 执行一次",
            "answer": "无限次"
        },
        {
            "title": "高级程序设计语言的特点是（ ）",
            "date": "高级语言接近算法语言不易掌握 高级语言数据结构丰富 高级语言与具体的机器结构密切相关 高级语言编写的程序计算机可立即执行",
            "answer": "高级语言数据结构丰富"
        },
        {
            "title": "设有定义：int x＝2;，以下表达式中，值不为6的是(  )。",
            "date": "x++,2*x x*＝x＋1 2*x,x+=2 x*＝(1＋x)",
            "answer": "2*x,x+=2"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "每个后缀为.C的C语言源程序都可以单独进行编译 在C语言程序中，main函数必须放在其他函数的最前面 在C语言程序中，只有main函数才可单独进行编译 每个后缀为.C的C语言源程序都应该包含一个main函数",
            "answer": "每个后缀为.C的C语言源程序都可以单独进行编译"
        },
        {
            "title": "若有定义：char c;int d; ，程序运行时输入： 1,2 ＜回车＞，能把值1输入给变量c、值2输入给变量d的输入语句是（ ）",
            "date": "scanf(\"cd\", c,d); scanf(\"c,d\", c,d); scanf(\"d,f\", c,d); scanf(\"dd\", c,d);",
            "answer": "scanf(\"c,d\", c,d);"
        },
        {
            "title": "以下叙述正确的是（ ）",
            "date": "EOF可以作为所有文件的结束标志 任何文件都不能用EOF作为文件的结束标志 EOF只能作为二进制文件的结束标志 EOF只能作为文本文件的结束标志，其值为1",
            "answer": "EOF只能作为文本文件的结束标志，其值为1"
        },
        {
            "title": "有以下说明语句：char *s =\"\"Name\\Address\n\";指针s所指字符串的长度是（ ）",
            "date": "说明语句不合法 14 17 15",
            "answer": "14"
        },
        {
            "title": "设有定义：int x[2][3];则以下关于二维数组x的叙述错误的是（ ）",
            "date": "数组x可以看作是由x[0]和x[1]两个元素组成的一维数组 元素x[0]可看作是由3个整型元素组成的一维数组 可以用x[0]=0;的形式为数组所有元素赋初值0 x[0]和x[1]是数组名，分别代表一个地址常量",
            "answer": "可以用x[0]=0;的形式为数组所有元素赋初值0"
        },
        {
            "title": "若想给已定义为int型的变量a、b、c、d赋整数1，以下选项中错误的语句是（ ）",
            "date": "d=c, c=b, b=a, a=1; d=c=b=a=1; d=1, c=d, b=c, a=b; d=(b=c=(a=1));",
            "answer": "d=c, c=b, b=a, a=1;"
        },
        {
            "title": "面向对象方法中，实现对象的数据和操作结合于统一体中的是（ ）",
            "date": "封装 抽象 结合 隐藏",
            "answer": "封装"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "地址重定位是在程序执行之前进行的 地址重定位是在程序执行期间进行的 地址重定位方式包括静态地址重定位和动态地址重定位 地址重定位要求程序必须占用连续固定的内存空间",
            "answer": "地址重定位方式包括静态地址重定位和动态地址重定位"
        },
        {
            "title": "下列叙述中正确的是（  ）。",
            "date": "算法的复杂度与问题的规模无关 数值型算法只需考虑计算结果的可靠性 对数据进行压缩存储会降低算法的空间复杂度 算法的优化主要通过程序的编制技巧来实现",
            "answer": "对数据进行压缩存储会降低算法的空间复杂度"
        },
        {
            "title": "下面选项中合法的字符常量是（ ）",
            "date": "quot;Xquot; 39;abc39; 39;X39; 39;＼39;",
            "answer": "不确定"
        },
        {
            "title": "面向对象方法中，继承是指（ ）",
            "date": "一个对象具有另一个对象的性质 一组对象所具有的相似性质 类之间共享属性和操作的机制 各对象之间的共同性质",
            "answer": "类之间共享属性和操作的机制"
        },
        {
            "title": "若a是数值类型，则逻辑表达式(a==1)||(a!=1)的值是（ ）",
            "date": "2 1 0 不知道a的值，不能确定",
            "answer": "1"
        },
        {
            "title": "读取二进制文件的函数调用形式为：fread(buffer，size，count，fp)；，其中buffer代表的是（ ）",
            "date": "一个文件指针，指向待读取的文件 一个内存块的字节数 一个整型变量，代表待读取的数据的字节数 一个内存块的首地址，代表读入数据存放的地址",
            "answer": "一个内存块的首地址，代表读入数据存放的地址"
        },
        {
            "title": "表达式：(int)((double)9/2)- 9%2 的值是（ ）",
            "date": "0 3 4 5",
            "answer": "3"
        },
        {
            "title": "C语言的常量包括数值型常量和符号常量，以下叙述正确的是（ ）",
            "date": "数值型常量1.0和1所占内存的大小不同 不能用sizeof求符号常量所占内存的大小 可以用A取得符号常量A所占内存的首地址 不能用sizeof求数值型常量所占内存的大小",
            "answer": "数值型常量1.0和1所占内存的大小不同"
        },
        {
            "title": "若有定义语句：int a=12;，则执行语句：a+= a-= a*a;后，a的值是（ ）",
            "date": "552 264 264 144",
            "answer": "264"
        },
        {
            "title": "下列叙述中错误的是（ ）",
            "date": "线性结构也能采用链式存储结构 非线性结构一定不能采用顺序存储结构 有的非线性结构也能采用顺序存储结构 线性结构一定能采用顺序存储结构",
            "answer": "非线性结构一定不能采用顺序存储结构"
        },
        {
            "title": "以下选项中叙述正确的是（ ）",
            "date": "使用三种基本结构就可以实现任何复杂算法 只要程序包含了三种基本结构中的任意一种，就是结构化程序 C语言程序不需要包含main()函数 程序语法错误要在运行时才能发现",
            "answer": "使用三种基本结构就可以实现任何复杂算法"
        },
        {
            "title": "若有定义语句：int year=2009, *p=&year;以下不能使变量year中的值增至2010的语句是（ ）",
            "date": "p++; ++(p); p+=1; (p)++;",
            "answer": "p++;"
        },
        {
            "title": "以下叙述中错误的是（ ）",
            "date": "数值型常量有正值和负值的区分 常量是在程序运行过程中值不能被改变的量 定义符号常量必须用类型名来设定常量的类型 常量可以用一个符号名来代表",
            "answer": "定义符号常量必须用类型名来设定常量的类型"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "如果p是指针变量，则p表示变量p的地址值 在对指针进行加、减算术运算时，数字1表示1个存储单元的长度 如果p是指针变量，则p+1和(p+1)的效果是一样的 如果p是指针变量，则p是不合法的表达式",
            "answer": "在对指针进行加、减算术运算时，数字1表示1个存储单元的长度"
        },
        {
            "title": "规范化主要为克服数据库逻辑结构中的插入异常，删除异常以及（ ）",
            "date": "数据不一致的问题 结构不合理的问题 数据丢失的问题 冗余度大的问题",
            "answer": "冗余度大的问题"
        },
        {
            "title": "C语言主要是借助以下哪种手段来实现程序模块化（ ）",
            "date": "定义函数 使用三种基本结构语句 使用丰富的数据类型 定义常量和外部变量",
            "answer": "应避免滥用goto语句"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "对于浮点变量x和y，表达式：x==y 是非法的，会出编译错误 分支结构是根据算术表达式的结果来判断流程走向的 在C语言中，逻辑真值和假值分别对应1和0 关系运算符两边的运算对象可以是Ｃ语言中任意合法的表达式",
            "answer": "关系运算符两边的运算对象可以是Ｃ语言中任意合法的表达式"
        },
        {
            "title": "下列叙述中正确的是（ ）",
            "date": "循环队列是队列的链式存储结构 具有两个以上指针的链表必定是非线性结构 能采用顺序存储的必定是线性结构 所有的线性结构都可以采用顺序存储结构",
            "answer": "所有的线性结构都可以采用顺序存储结构"
        },
        {
            "title": "C语言中char类型数据占字节数为（ ）",
            "date": "3 1 4 2",
            "answer": "1"
        },
        {
            "title": "以下选项中叙述正确的是（ ）",
            "date": "结构化程序的三种基本结构是循环结构、选择结构、顺序结构 C语言源程序不编译也能直接运行 使用N－S流程图不能描述复杂算法 计算机能够直接运行C语言源程序，不必进行任何转换",
            "answer": "结构化程序的三种基本结构是循环结构、选择结构、顺序结构"
        },
        {
            "title": "以下选项中可用作C语言中合法用户标识符的是",
            "date": "_123 void 2a abc",
            "answer": "_123"
        },
        {
            "title": "设有以下说明和语句：int x[3][4],(*p)[4]; p=a;，则与表达式*(*p+2) 等价的选项是（ ）",
            "date": "(a+2)[0] a[2][0] (a+2)[0] a[0][2]",
            "answer": "a[0][2]"
        },
        {
            "title": "设栈的顺序存储空间为S(1:m)，初始状态为top=m+1。现经过一系列正常的入栈与退栈操作后，top=0，则栈中的元素个数为（ ）",
            "date": "不可能 m 1 m+1",
            "answer": "不可能"
        },
        {
            "title": "以下叙述中正确的是（ ）",
            "date": "只要适当地修改代码，就可以将dowhile与while相互转换 对于\"for(表达式1；表达式2；表达式3) 循环体\"，只在个别情况下才能转换成while语句 如果根据算法需要使用无限循环（即通常所称的\"死循环\") ，则只能使用while语句 对于\"for(表达式1；表达式2；表达式3) 循环体\"首先要计算表达式2的值，以便决定是否开始循环",
            "answer": "只要适当地修改代码，就可以将dowhile与while相互转换"
        },
        {
            "title": "设有定义：int a=0,b=1;，以下表达式中，会产生\"短路\"现象，致使变量b的值不变的是",
            "date": "a++ ++b +a ++b ++a b++ a++ b++",
            "answer": "a++ b++"
        },
        {
            "title": "若变量已正确定义，则以下for循环（ ）：for ( x=0,y=0; ( y!=123 ) && ( x＜4 ); x++ );",
            "date": "执行123次 执行4次 执行次数不确定 执行3次",
            "answer": "执行4次"
        },
        {
            "title": "设有定义：int a,b[10],*c=NULL,*p;，则以下语句错误的是（ ）",
            "date": "p=c; p=b[0]; p=b; p=a;",
            "answer": "p=a;"
        },
        {
            "title": "在关系数据库中，描述全局数据逻辑结构的是（ ）",
            "date": "物理模式 用户模式 内模式 概念模式",
            "answer": "概念模式"
        },
        {
            "title": "以下选项中，当x为大于1的奇数时，值为0的表达式是（ ）",
            "date": "x2!=0 x2==0 x2==1 x/2",
            "answer": "x2==0"
        },
        {
            "title": "采用虚拟存储管理技术的主要优点是（ ）",
            "date": "提高了运行速度 有效地提高内存的利用率 有效解决了碎片问题，能更有效利用内存空间 可为用户提供比物理内存大的多的逻辑地址空间",
            "answer": "可为用户提供比物理内存大的多的逻辑地址空间"
        },
        {
            "title": "sizeof( double )是（ ）",
            "date": "一个整型表达式 一个不合法的表达式 一个双精度型表达式 一种函数调用",
            "answer": "一个整型表达式"
        },
        {
            "title": "以下选项中叙述正确的是（ ）",
            "date": "char c1, c2, c3, c4[40]; 是合法的变量定义语句 数组说明符的一对方括号中只能使用整型常量，而不能使用表达式 数组下标的下限可以是负值 若有数组定义 float array[4]; 则语句 printf(\"f\", array[3.12]);是合法的",
            "answer": "char c1, c2, c3, c4[40]; 是合法的变量定义语句"
        },
        {
            "title": "以下选项中叙述正确的是（ ）",
            "date": "C语言的标识符可分为关键字、预定义标识符和用户标识符三类 C语言的标识符可分为语句、变量和关键字三类 C语言的标识符可分为函数名、变量和预定义标识符三类 C语言的标识符可分为运算符、用户标识符和关键字三类",
            "answer": "C语言的标识符可分为关键字、预定义标识符和用户标识符三类"
        },
        {
            "title": "有以下说明语句：char *s =\"\"Name\\Address\n\";指针s所指字符串的长度是（ ）",
            "date": "14 15 说明语句不合法 17",
            "answer": "14"
        },
        {
            "title": "若有定义：int w[3][5]; 则以下不能正确表示该数组元素的表达式是（ ）",
            "date": "(w+1)[4] (w+3) ((w+1)) (w[0][0]+1)",
            "answer": "(w+1)[4]"
        },
        {
            "title": "如果定义：float a[10], x；则以下叙述中正确的是（  ）",
            "date": "表达式 a+1 是非法的 表达式a[1]是非法的，应该写成 ((a[1])) 语句 a = x; 是非法的 三个表达式 a[1]、(a+1)、a[1]表示的意思完全不同",
            "answer": "语句 a = x; 是非法的"
        },
        {
            "title": "以下叙述中正确的是（  ）",
            "date": "指针变量之间不能用关系运算符进行比较 设变量p是一个指针变量，则语句p=0;是非法的，应该使用p=NULL; 如果企图通过一个空指针来访问一个存储单元，将会得到一个出错信息 即使不进行强制类型转换，在进行指针赋值运算时，指针变量的基类型也可以不同",
            "answer": "如果企图通过一个空指针来访问一个存储单元，将会得到一个出错信息"
        },
        {
            "title": "循环队列是队列的一种顺序存储结构",
            "date": "p = ''; p = '0'; p = ; p = 0;",
            "answer": "p = 0;"
        },
        {
            "title": "设有定义：char p[]＝{'1'，'2'，'3'}，*q＝p；，以下不能计算出一个char型数据所占字节数的表达式是（  ）",
            "date": "sizeof(p) sizeof(p[0]) sizeof(q) sizeof(char)",
            "answer": "sizeof(p)"
        },
        {
            "title": "我们所写的每条C语句，经过编译最终都将转换成二进制的机器指令。关于转换以下说法错误的是（  ）",
            "date": "一条C语句对应转换成一条机器指令 一条C语句可能会被转换成多条机器指令 某种类型和格式的C语句被转换成机器指令的条数是固定的 一条C语句可能会被转换成零条机器指令",
            "answer": "一条C语句对应转换成一条机器指令"
        },
        {
            "title": "下面属于字符类的实例是（  ）",
            "date": "'518' 'nm' 'n' “5”",
            "answer": "'n'"
        },
        {
            "title": "以下选项中，能正确进行字符串赋值的是（  ）",
            "date": "char  s[5] = { 'A', 'B', 'C', 'D', 'E' }; ",
            "answer": "char  s = ABCDE ;"
        },
        {
            "title": "已知大写字母A的ASCII码是65，小写字母a的ASCII码是97。以下不能将变量c中的大写字母转换为对应小写字母的语句是（  ）",
            "date": "c=(c'A')26 +'a' c=('A'+c)26'a' c=c+32 c=c'A'+'a'",
            "answer": "c=('A'+c)26'a'"
        },
        {
            "title": "以下选项中，合法的C语言常量是（  ）",
            "date": "'CPP' 2MB .0 21.84",
            "answer": "21.84"
        }
    ]
}